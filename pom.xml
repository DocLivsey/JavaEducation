<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dclvs</groupId>
    <artifactId>JavaEducation</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>22</java.version>
        <maven.compiler.source>20</maven.compiler.source>
        <maven.compiler.target>20</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <lombok.version>1.18.30</lombok.version>
    </properties>

    <dependencies>
        <!--
        EasyRandom . EasyRandom — это простая в использовании библиотека, которая практически не требует настройки и,
        просто обходя тип класса, создает для нас экземпляры целых графов объектов.

        Два самых важных класса в библиотеке:
        EasyRandom , который будет генерировать объекты, и
        EasyRandomParameters , позволяющий нам настраивать процесс генерации и делать его более предсказуемым.

        <code>
            EasyRandom generator = new EasyRandom();
            Person person = generator.nextObject(Person.class);

            assertNotNull(person.getAge());
            assertNotNull(person.getFirstName());
            assertNotNull(person.getLastName());
        </code>
        -->
        <dependency>
            <groupId>org.jeasy</groupId>
            <artifactId>easy-random-core</artifactId>
            <version>4.0.0</version>
        </dependency>

        <!--
        Чтобы избавить разработчиков от написания шаблонного кода, мы используем библиотеку Lombok.

        Используя ряд аннотаций, Lombok на этапе компиляции проекта генерирует вместо нас шаблонный код,
        в котором могут быть как и простые геттеры, сеттеры и вывод в строку, так и более сложные механизмы:
        конструкторы, билдеры и даже обработка исключений.
        -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
        Для удобства конвертирования одних моделей в другие можно использовать библиотеку MapStruct.

        Используя ряд аннотаций, MapStruct на этапе компиляции проекта генерирует вместо нас шаблонный код
        для присвоения значений одного объекта полям другого объекта. Более того,
        MapStruct позволяет описывать это отображение (маппинг) из нескольких объектов в один и
        даже одни коллекции в другие. Рассмотрим основной функционал библиотеки.
        -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerArgs>--enable-preview</compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>